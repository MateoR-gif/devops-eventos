# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [dev, main]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # Puedes ajustar a la versión de Node.js que estés utilizando

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: docker/cache-action@v2
      with:
        path: |
          **/Dockerfile
          **/package.json
          **/package-lock.json

    - name: Build Docker image
      run: |
        docker build -t my-api-image:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker tag my-api-image:latest ${{ secrets.DOCKER_USERNAME }}/my-api-image:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-api-image:latest
